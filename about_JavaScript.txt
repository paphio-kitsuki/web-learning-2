・JavaScriptは何ができるのか
	有用な値を変数に格納(保存)する
	文字列の操作
	ウェブページで起こるイベントの処理
	など。

・ブラウザーAPIについて
	DOMAPIはHTMLやCSSの操作を可能にする。
	GeolocationAPIは地理的な情報を取得できる。
	CanvasとWebGLのAPIは2Dや3Dのグラフィックアニメーションを可能にする。
	HTMLMediaElementやWebRTCなどといった音声と動画のAPIは、音声・動画をウェブページで再生したり、ウェブカメラで録画したりすることを可能にする。

・サードパーティーAPIについて
	これはブラウザーには組み込まれておらず、普通はウェブ上のどこかから探さなければならない。
	TwitterAPIや、GoogleマップAPIなどがある。

JavaScriptをhtmlやcssが読み込まれる前に実行しようとすると、エラーが起こる可能性がある。
ブラウザのタブ内のコードは完全に分かれて実行されており、タブ同士で干渉できない。

・インタープリターとコンパイル
	インタープリター言語は変換せずに、上から下に実行されてすぐに結果が返ってくる。
	コンパイル言語は一旦機械語にコンパイルする必要がある。
	JavaScriptはインタープリター型プログラミング言語。

・動的コードと静的コード
	実行するたびに異なる状況では異なる表示ができるものが、動的コード
	どんな状況でも常に同じコンテンツを表示するものは、静的コード

htmlの要素の属性に直接JavaScriptの関数を指定したりなどで、htmlの中にJavaScriptを書いているものがたまにあるが、統一性に欠ける上、非効率なので避けるべき。
代わりに、addEventListener()を使う。

・asyncとdefer
	どちらも、ページのその他の部分と並行して、スクリプトもダウンロードする。
	async属性を使うと...
		ダウンロード完了するとすぐに実行され、ページがブロックされる。
		複数のスクリプトが特定の順序で実行される保証はない。
		ページ内のスクリプトが互いに独立で、依存しない場合はasyncを使うと良い。
	deferを使うと...
		ページのコンテンツがすべて読み込まれるまで実行されない。
		出現する順番に読み込まれる。
		スクリプトがDOMに依存している場合(ページ上の要素を変更するなど)に使うと良い。
